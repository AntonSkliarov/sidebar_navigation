{"version":3,"sources":["helpers/_consts.js","helpers/_functions.js","scripts/sidebarNavigation.js"],"names":["CLASSES","sidebarNav","sidebarNavButton","sidebarNavButtonActive","sidebarNavItem","DOM","parent","document","querySelector","sections","querySelectorAll","VIEWPORT_HEIGHT","DEFAULT_DURATION","FUNC","runAtEnd","console","log","runAtStart","removeActiveClass","classList","remove","isInViewport","elements","visibleElementCheck","map","element","checkCurrentElement","getBoundingClientRect","bottom","body","scrollHeight","length","indexOf","MyFullPage","config","duration","spinValue","canScroll","onEnd","onStart","dots","sectionNavigation","onMouseWheel","setAnimationDuration","generateNavigation","currentScrollY","window","scrollY","style","transform","buttons","add","setTimeout","throttle","func","delay","isThrottle","wrapper","addEventListener","event","deltaY","scrollContent","userScrollY","transition","insertAdjacentHTML","forEach","section","dataset","target","innerHTML","button","index","point","sectionNumber","newNavigation","on"],"mappings":"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","file":"sidebarNavigation.7567754f.js","sourceRoot":"..\\src","sourcesContent":["export const CLASSES = {\n  sidebarNav: 'sidebar-nav',\n  sidebarNavButton: 'sidebar-nav__button',\n  sidebarNavButtonActive: 'sidebar-nav__button_is-active',\n  sidebarNavItem: 'sidebar-nav__item',\n};\n\nexport const DOM = {\n  parent: document.querySelector('.main-content'),\n  sections: document.querySelectorAll('.section'),\n  sidebarNav: `<div class=\"${CLASSES.sidebarNav}\"></div>`,\n};\n\nexport const VIEWPORT_HEIGHT = 100;\nexport const DEFAULT_DURATION = 500;\n","import { CLASSES } from './_consts';\n\nconst FUNC = {\n  runAtEnd: () => {\n    console.log('I run at the end');\n  },\n\n  runAtStart: () => {\n    console.log('I run at the start');\n  },\n\n  removeActiveClass: () => {\n    document\n      .querySelector(`.${CLASSES.sidebarNavButtonActive}`)\n      .classList.remove(CLASSES.sidebarNavButtonActive);\n  },\n\n  // currentSectionCheck: (sections) => {\n  //   function elementInViewport(el) {\n  //     const top = el.offsetTop;\n  //     const left = el.offsetLeft;\n  //     const width = el.offsetWidth;\n  //     const height = el.offsetHeight;\n\n  //     return (\n  //       top < (window.pageYOffset + window.innerHeight)\n  //       && left < (window.pageXOffset + window.innerWidth)\n  //       && (top + height) > window.pageYOffset\n  //       && (left + width) > window.pageXOffset\n  //     );\n  //   }\n\n  //   const visibleSectionCheck = [...sections].map((section) => elementInViewport(section));\n  //   console.log(visibleSectionCheck);\n\n  //   return visibleSectionCheck.indexOf(true);\n  // },\n\n  isInViewport: (elements) => {\n    const checkCurrentElement = (elem) => {\n      const bounding = elem.getBoundingClientRect();\n      // console.log(bounding.bottom);\n\n      // console.log('bounding: ', bounding);\n      // console.log('Height: ', document.body.scrollHeight);\n      // console.log('result: ', bounding.bottom - (document.body.scrollHeight / elements.length));\n\n      const currentSectionCheck = bounding.bottom - (document.body.scrollHeight / elements.length);\n\n      return currentSectionCheck;\n\n      // return (\n      //   (bounding.top >= 0 && bounding.bottom >= 0)\n      //   // && bounding.left >= 0\n      //   && bounding.top <= (window.innerHeight || document.documentElement.clientHeight)\n      //   // && bounding.right <= (window.innerWidth || document.documentElement.clientWidth)\n      // );\n    };\n\n    const visibleElementCheck = [...elements].map((element) => checkCurrentElement(element));\n\n    // console.log(visibleElementCheck);\n    return visibleElementCheck.indexOf(0);\n  },\n};\n\nexport default FUNC;\n","import {\n  CLASSES,\n  DOM,\n  VIEWPORT_HEIGHT,\n  DEFAULT_DURATION,\n} from '../helpers/_consts';\nimport FUNC from '../helpers/_functions';\n\nclass MyFullPage {\n  constructor(config) {\n    this.sections = config.sections || DOM.sections;\n    this.duration = config.duration || DEFAULT_DURATION;\n    this.parent = config.parent || DOM.parent;\n    this.spinValue = config.spinValue || FUNC.isInViewport(this.sections);\n    this.canScroll = config.canScroll || true;\n    this.onEnd = config.onEnd || null;\n    this.onStart = config.onStart || null;\n    this.dots = config.dots || false;\n    this.sectionNavigation = '';\n\n    this.onMouseWheel();\n    this.setAnimationDuration(this.duration);\n    this.generateNavigation(this.dots);\n\n    this.currentScrollY = window.scrollY;\n  }\n\n  scrollContent() {\n    if (this.onStart) {\n      this.onStart();\n    }\n\n    this.parent.style.transform = `translateY(-${this.spinValue * VIEWPORT_HEIGHT}vh)`;\n\n    FUNC.removeActiveClass();\n\n    this.buttons[this.spinValue].classList.add(CLASSES.sidebarNavButtonActive);\n\n    if (this.onEnd) {\n      setTimeout(() => {\n        this.onEnd();\n      }, this.duration);\n    }\n  }\n\n  onMouseWheel() {\n    const throttle = (func, delay) => {\n      let isThrottle = false;\n\n      const wrapper = (...args) => {\n        if (isThrottle) {\n          return;\n        }\n\n        func(...args);\n\n        isThrottle = true;\n        setTimeout(() => {\n          isThrottle = false;\n        }, delay);\n      };\n\n      return wrapper;\n    };\n\n    const scrollHandler = (event) => {\n      if (event.deltaY > 0) {\n        this.spinValue += this.spinValue < (this.sections.length - 1) ? 1 : 0;\n      } else {\n        this.spinValue -= this.spinValue > 0 ? 1 : 0;\n      }\n\n      this.scrollContent();\n    };\n\n    // working on start\n    const touchpadScrollHandler = () => {\n      console.log('currentScrollY: ', this.currentScrollY);\n      const userScrollY = window.scrollY;\n\n      if (userScrollY > this.currentScrollY) {\n        this.spinValue += this.spinValue < (this.sections.length - 1) ? 1 : 0;\n      }\n\n      if (userScrollY < this.currentScrollY) {\n        this.spinValue -= this.spinValue > 0 ? 1 : 0;\n      }\n\n      this.currentScrollY = userScrollY;\n\n      this.scrollContent();\n      console.log('userScrollY: ', userScrollY);\n      console.log('spinValue: ', this.spinValue);\n    };\n    // working on end\n\n    window.addEventListener('wheel', throttle(scrollHandler, this.duration));\n\n    // working on start\n    document.addEventListener('scroll', throttle(touchpadScrollHandler, this.duration));\n    document.addEventListener('touchstart', () => {\n      console.log('touch');\n    });\n    // working on end\n  }\n\n  setAnimationDuration(duration) {\n    this.parent.style.transition = `transform ${duration}ms ease-out`;\n  }\n\n  generateNavigation(dots) {\n    if (!dots) {\n      return;\n    }\n\n    document.body.insertAdjacentHTML('beforeEnd', DOM.sidebarNav);\n\n    this.sections.forEach((section) => {\n      this.sectionNavigation += `\n        <div class=\"${CLASSES.sidebarNavButton}\">\n          <span class=\"${CLASSES.sidebarNavItem}\">\n          ${section.dataset.target}\n          </span>\n        </div>\n      `;\n    });\n\n    document.querySelector(`.${CLASSES.sidebarNav}`).innerHTML = this.sectionNavigation;\n\n    this.buttons = document.querySelectorAll(`.${CLASSES.sidebarNavButton}`);\n    this.buttons[this.spinValue].classList.add(CLASSES.sidebarNavButtonActive);\n    this.buttons.forEach((button, index) => {\n      button.addEventListener('click', () => {\n        FUNC.removeActiveClass();\n\n        button.classList.add(CLASSES.sidebarNavButtonActive);\n\n        this.spinValue = index;\n        this.scrollContent();\n      });\n    });\n  }\n\n  on(point, func) {\n    switch (point) {\n      case 'end':\n        this.onEnd = func;\n        break;\n      case 'start':\n        this.onStart = func;\n        break;\n      default:\n        this.onEnd = null;\n        this.onStart = null;\n    }\n  }\n\n  goTo(sectionNumber) {\n    this.spinValue = sectionNumber;\n    this.scrollContent();\n  }\n}\n\nconst config = {\n  sections: null,\n  duration: 1000,\n  parent: null,\n  spinValue: null,\n  canScroll: null,\n  onEnd: null,\n  onStart: null,\n  dots: true,\n};\n\nconst newNavigation = new MyFullPage(config);\nnewNavigation.on('end', FUNC.runAtEnd);\nnewNavigation.on('start', FUNC.runAtStart);\n// newNavigation.goTo(0);\n"]}